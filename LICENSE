git add readme.txt
git commit -m "wrote a readme file"
git status
git diff readme.txt
git log
git log --pretty=oneline
git reset --hard HEAD^    (HEAD~100)
git reset --hard 1094a
git reflog
git checkout -- readme.txt
git reset HEAD readme.txt     git checkout -- readme.txt
git rm test.txt               git commit -m "remove test.txt"
git checkout -- test.txt

git remote add origin git@github.com:happyjacob123/learngit.git//关联一个远程库
git push -u origin master//第一次推送master分支时，加上了-u参数
git push origin master//推送最新修改
git clone git@github.com:happyjacob123/code.git

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>
合并后的历史有分支，能看出来曾经做过合并:git merge --no-ff -m "merge with no-ff" dev

删除分支：git branch -d <name>
删除远程git服务器上的分支：git push origin -d <name>

看分支合并图git log --graph --pretty=oneline --abbrev-commit

看工作现场存到哪？git stash list
保存工作现场git stash
回到工作现场git stash pop


查看远程库信息，使用git remote -v；
从本地推送分支git push origin branch-name，如果推送失败,远程分支比本地新，先用git pull抓取远程的新提交；
在本地创建和远程分支对应的分支git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联git branch --set-upstream-to <branch-name> origin/<branch-name>。
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

